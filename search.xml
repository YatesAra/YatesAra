<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[算法案例整理]]></title>
    <url>%2Falgorithm-cases%2F</url>
    <content type="text"><![CDATA[求最大公约数♍### 辗转相除法（欧几里得算法）➗ 大数除小数，取余数，直到余数为零，取最后除数。 basic12345678INPUT m, n DO r = m MOD n m = n n = rLOOP UNTIL r=0PRINT mEND 更相减损术 ➖约减为偶数，大数减小数，直到得数相等，取等数（还原约简）。 basic123456789101112INPUT m, nWHILE m MOD 2 = 0 AND n MOD 2 = 0 m = m / 2 n = n / 2WENDDo r = m - n m = n n = rLOOP UNTIL n = rprint nEND 求多项式的值 ➕秦九韶算法 ⏭每一次利用上一次的计算结果。 v0 = an , v1 = v0x + an-1 , vk = vk-1 x + an-k (k = 1, 2, …，n) (注意每个字母代表的含义。) basic12345678910111213INPUT &quot;n=&quot;; nINPUT &quot;an&quot;; aINPUT &quot;x &quot;; xv = ai = n - 1WHILE i &gt;= 0 PRINT &quot;i=&quot; i INPUT &quot;ai=&quot; a //输入ai v = v*x + a i = i - 1WENDPRINT vEND 进位制### 二进制化十进制 十进制转化二进制 （《数学3 必修》语法）]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>程序</tag>
        <tag>多项式</tag>
        <tag>进位制，欧几里得</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[条件结构与循环结构：应用]]></title>
    <url>%2Fbranch-and-loop-structure_to-use%2F</url>
    <content type="text"><![CDATA[条件结构🔀（可以按 含有Else 和 不含Else 分为两种形式。 区别在于否的线路是否有其他执行体。） 条件结构的框图含有判断框，会产生分支。 条件结构本身并不循环。 循环结构🔁可以分为 当型(WHILE)循环结构 和 直到型(UNTIL)循环结构。 当型是Y入N出；直到型是Y出，至少执行一次。 循环结构中反复执行的步骤称为 循环体。 如果循环体没有帮助尾部判断结果接近界限，那么会导致无限循环。 循环结构中一定包含条件结构（分支），判断循环改变的界限。 选择💭从目的来看，重要的并非Y与N的区别，Y与N是可以简单转换的。 如果需要执行一次判断，那么只需要一个条件结构。 需要判定进入且需要有限循环，用当型循环；不需要判定进入，两种循环均可。 先画程序框图，再书写算法语句，分割结构。 可以借助一些辅助变量帮助计数，储存。 应用🚗1 按大小排序（条件结构）basic12345678INPUT &quot;a,b=&quot;; a,b,cIF b &gt; a THEN x = a a = b b = xEND IFPRINT &quot;从大到小：&quot;; a,bEND 规范📏 书写程序框图时，判断框内要写问号，之后的两条线上要标明是/否（Y/N）。 ABS( ) 求绝对值，SQR( ) 求非负数的算术平方根。 （《数学3 必修》语法）]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>程序</tag>
        <tag>思维</tag>
      </tags>
  </entry>
</search>
